// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Obligatorio_AccesoDatos;

#nullable disable

namespace Obligatorio_AccesoDatos.Migrations
{
    [DbContext(typeof(ObligatorioDBContext))]
    [Migration("20231228191932_CorrecionNOmbresRecargaDeDatosReales")]
    partial class CorrecionNOmbresRecargaDeDatosReales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.Property<int>("CabanaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CabanaId"));

                    b.Property<int>("CapacidadMaxima")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("HabilitadaReservas")
                        .HasColumnType("bit");

                    b.Property<string>("Imagen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("JacuzziPrivado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("NumeroHabitacion")
                        .HasColumnType("int");

                    b.Property<int>("TipoCabanaId")
                        .HasColumnType("int");

                    b.HasKey("CabanaId");

                    b.HasIndex("TipoCabanaId");

                    b.ToTable("Cabanas");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("CabanaId")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroHabitacion")
                        .HasColumnType("int");

                    b.Property<string>("Trabajador")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Descripcion");

                    b.HasIndex("CabanaId");

                    b.ToTable("Mantenimientos");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Reserva", b =>
                {
                    b.Property<int>("ReservaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReservaId"));

                    b.Property<int>("CabanaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumeroHuespedes")
                        .HasColumnType("int");

                    b.Property<decimal>("PorcentajeDescuento")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("ReservaId");

                    b.HasIndex("CabanaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Reservas");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.TipoCabana", b =>
                {
                    b.Property<int>("IdTipoCabana")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTipoCabana"));

                    b.Property<decimal>("CostoPorHuesped")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdTipoCabana");

                    b.ToTable("TipoCabanas");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.HasOne("Obligatorio_LogicaNegocio.Entidades.TipoCabana", "TipoCabana")
                        .WithMany()
                        .HasForeignKey("TipoCabanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipoCabana");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Mantenimiento", b =>
                {
                    b.HasOne("Obligatorio_LogicaNegocio.Entidades.Cabana", null)
                        .WithMany("Mantenimientos")
                        .HasForeignKey("CabanaId");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Reserva", b =>
                {
                    b.HasOne("Obligatorio_LogicaNegocio.Entidades.Cabana", "Cabana")
                        .WithMany()
                        .HasForeignKey("CabanaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Obligatorio_LogicaNegocio.Entidades.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cabana");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Obligatorio_LogicaNegocio.Entidades.Cabana", b =>
                {
                    b.Navigation("Mantenimientos");
                });
#pragma warning restore 612, 618
        }
    }
}
